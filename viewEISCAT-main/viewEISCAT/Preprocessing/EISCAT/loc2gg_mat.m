function [height,lat,lon]=loc2gg_mat(site,range,az,el)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% site as in EISCAT analysis 1=Kir, 2=Tro,3=Sod, 4=ESR   (s1,s2,s3)    (d1,d2,d3) % ESR added 2004 (to geometry matrix)%% This function transforms coordinates from        (r,az,el) to (h,lat,lon)%                			                      [km,deg,deg]  [km,deg,deg]  % (m,n) matrix (m columns, n rows)% P�ivi� Pollari 28.4.1992% changed for matrices by A. Aikio 92-12% load mat-file, if necessaryif exist('rgcloc')<1  load geometry;    % variables xsite,r_earth,rgcloc,rlocgc in this file                    % (created by a SAVE command)  endfactor=pi/180;        % conversion factor from degrees to radians[m,n]=size(range); % m ranges, n profilesfor i=1:n  % profiless2=az(i);s3=el(i);for j=1:m  % rangess1=range(j,i);loc=s1*[-cos(factor*s2)*cos(factor*s3),         sin(factor*s2)*cos(factor*s3),         sin(factor*s3)];row_ind=3*site-2:3*site;gc=xsite(site,:)'+rlocgc(:,row_ind)*loc;if gc(1)==0 && gc(2)==0  fprintf('Beware of the spinning earth axis!\n');  height(j,i)=gc(3)-r_earth/g;  lat(j,i)=90;  lon(j,i)=0;else  lon(j,i)=atan2(gc(2),gc(1))/factor;  r0=sqrt(sum(gc(1:2).*gc(1:2)));  xi0=gc(3)/(r0*sqrt(g));  xi_iter=r_earth*(g-1)/(g*r0);  tanxi=xi0;  tanxi=xi0+xi_iter*tanxi/sqrt(1+tanxi^2);  tanxi=xi0+xi_iter*tanxi/sqrt(1+tanxi^2);  lat(j,i)=atan(sqrt(g)*tanxi)/factor;  height(j,i)=sqrt(1+g*tanxi^2)*(r0-r_earth/sqrt(1+tanxi^2));endendend%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%